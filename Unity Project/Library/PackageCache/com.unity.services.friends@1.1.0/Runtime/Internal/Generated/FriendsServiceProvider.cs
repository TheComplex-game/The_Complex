//-----------------------------------------------------------------------------
// <auto-generated>
//     This file was generated by the C# SDK Code Generator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//-----------------------------------------------------------------------------


using UnityEngine;
using System.Threading.Tasks;
using Unity.Services.Friends.Internal.Generated.Apis.Messaging;
using Unity.Services.Friends.Internal.Generated.Apis.Notifications;
using Unity.Services.Friends.Internal.Generated.Apis.Presence;
using Unity.Services.Friends.Internal.Generated.Apis.Relationships;
using Unity.Services.Friends.Internal.Generated.Http;
using Unity.Services.Core.Internal;
using Unity.Services.Authentication.Internal;

namespace Unity.Services.Friends.Internal.Generated
{
    internal class FriendsServiceProvider : IInitializablePackage
    {
        [RuntimeInitializeOnLoadMethod(RuntimeInitializeLoadType.BeforeSceneLoad)]
        internal static void Register()
        {
            // Pass an instance of this class to Core
            var generatedPackageRegistry =
            CoreRegistry.Instance.RegisterPackage(new FriendsServiceProvider());
                // And specify what components it requires, or provides.
            generatedPackageRegistry.DependsOn<IAccessToken>();

        }

        public Task Initialize(CoreRegistry registry)
        {
            var httpClient = new HttpClient();

            var accessTokenFriends = registry.GetServiceComponent<IAccessToken>();
            
            if (accessTokenFriends != null)
            {
                FriendsService.Instance =
                    new InternalFriendsService(httpClient, accessTokenFriends);
            }
            return Task.CompletedTask;
        }
    }

    /// <summary>
    /// InternalFriendsService
    /// </summary>
    internal class InternalFriendsService : IFriendsService
    {
        /// <summary>
        /// Constructor for InternalFriendsService
        /// </summary>
        /// <param name="httpClient">The HttpClient for InternalFriendsService.</param>
        /// <param name="accessToken">The Authentication token for the service.</param>
        
        public InternalFriendsService(HttpClient httpClient, IAccessToken accessToken = null)
        {
            
            MessagingApi = new MessagingApiClient(httpClient, accessToken);
            
            NotificationsApi = new NotificationsApiClient(httpClient, accessToken);
            
            PresenceApi = new PresenceApiClient(httpClient, accessToken);
            
            RelationshipsApi = new RelationshipsApiClient(httpClient, accessToken);
            
            var baseUrl = "https://social.services.api.unity.com";
            Configuration = new Configuration(baseUrl, 10, 4, null);
        }
        
        /// <summary> Instance of IMessagingApiClient interface</summary>
        public IMessagingApiClient MessagingApi { get; set; }
        
        /// <summary> Instance of INotificationsApiClient interface</summary>
        public INotificationsApiClient NotificationsApi { get; set; }
        
        /// <summary> Instance of IPresenceApiClient interface</summary>
        public IPresenceApiClient PresenceApi { get; set; }
        
        /// <summary> Instance of IRelationshipsApiClient interface</summary>
        public IRelationshipsApiClient RelationshipsApi { get; set; }
        
        /// <summary> Configuration properties for the service.</summary>
        public Configuration Configuration { get; set; }
    }
}
